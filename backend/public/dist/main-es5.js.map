{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/accueil/accueil.component.ts","webpack:///src/app/accueil/accueil.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/appointment/appointment.component.ts","webpack:///src/app/appointment/appointment.component.html","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/rgpd/rgpd.component.ts","webpack:///src/app/rgpd/rgpd.component.html","webpack:///src/app/services/appointmentService/appointment.service.ts","webpack:///src/app/services/contactService/contact.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccueilComponent","selector","templateUrl","styleUrls","routes","AppRoutingModule","forRoot","imports","AppComponent","title","path","redirectTo","pathMatch","component","AppModule","withConfig","warnOnNgModelWithFormControl","declarations","providers","bootstrap","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","AppointmentComponent","appointmentService","emailFormControl","required","email","PhoneFormControl","NameFormControl","SurnameFormControl","matcher","date_selected","reserved_date_list","requested_date_parsed","reservation","date_list","hour","empty","dateFilter","d","day","Date","getDay","type","event","console","log","value","selected_date","year","getFullYear","toString","month","getMonth","getDate","daterequested","getDateList","reserved","date","name","surname","phone","sendReservation","select_date","$event","ContactComponent","builder","contact","FormData","group","Fullname","Email","compose","Comment","PostMessage","subscribe","response","location","href","error","warn","responseText","onSubmit","FooterComponent","HeaderComponent","RgpdComponent","AppointmentService","http","current_date_selected","date_parsed","post","prenom","get","providedIn","ContactService","mailApi","input","responseType","pipe","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-accueil',\n  templateUrl: './accueil.component.html',\n  styleUrls: ['./accueil.component.scss']\n})\nexport class AccueilComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'bedrommSite';\n}\n","\n<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AccueilComponent } from './accueil/accueil.component';\nimport { AppointmentComponent } from './appointment/appointment.component';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatNativeDateModule} from \"@angular/material/core\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport { RgpdComponent } from './rgpd/rgpd.component';\nimport { ContactComponent } from './contact/contact.component';\nimport {HttpClientModule} from \"@angular/common/http\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/accueil', pathMatch: 'full'},\n  {path: '404', redirectTo: '/accueil', pathMatch: 'full'},\n  {path: 'accueil', component: AccueilComponent},\n  {path: 'appointment', component: AppointmentComponent},\n  {path: 'rgpd', component: RgpdComponent},\n  {path: 'contact', component: ContactComponent},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    AccueilComponent,\n    AppointmentComponent,\n    RgpdComponent,\n    ContactComponent,\n  ],\n  imports: [\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'}),\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgbModule,\n    RouterModule.forRoot(routes),\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatListModule,\n    MatIconModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    MatDatepickerModule,\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from \"@angular/forms\";\nimport {ErrorStateMatcher} from \"@angular/material/core\";\nimport {AppointmentService} from \"../services/appointmentService/appointment.service\";\nimport {MatDatepickerInputEvent} from \"@angular/material/datepicker\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-appointment',\n  templateUrl: './appointment.component.html',\n  styleUrls: ['./appointment.component.scss']\n})\n\nexport class AppointmentComponent implements OnInit {\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  PhoneFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  NameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  SurnameFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  matcher = new MyErrorStateMatcher();\n\n  name: any;\n  surname: any;\n  phone: any;\n  email: any;\n\n  date_selected = false;\n  reserved_date_list = [];\n  requested_date_parsed = null;\n  reservation = null\n  selected_date: any;\n  date_list = [\n    {\n    hour: 8,\n    empty: true,\n  },\n    {\n      hour: 9,\n      empty: true,\n    },\n    {\n      hour: 10,\n      empty: true,\n    },\n    {\n      hour: 11,\n      empty: true,\n    },\n    {\n      hour: 12,\n      empty: true,\n    },\n    {\n      hour: 13,\n      empty: true,\n    },\n    {\n      hour: 14,\n      empty: true,\n    },\n    {\n      hour: 15,\n      empty: true,\n    },\n    {\n      hour: 16,\n      empty: true,\n    },\n    {\n      hour: 17,\n      empty: true,\n    },\n    {\n      hour: 18,\n      empty: true,\n    },\n  ];\n\n  dateFilter = (d: Date | null): boolean => {\n    const day = (d || new Date()).getDay();\n    // pas le mardi et dimanche\n    return day !== 1 && day !== 6;\n  }\n\n  constructor(private appointmentService: AppointmentService) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * récupération de la liste des heures disponibles sur base de la date choisie\n   * @param type\n   * @param event\n   */\n  select_date(type: string, event: MatDatepickerInputEvent<Date>) {\n    console.log(event.value);\n    this.date_selected = true;\n    this.selected_date = event.value;\n    let year = this.selected_date.getFullYear().toString();\n    let month = (this.selected_date.getMonth() + 1).toString();\n    let day = this.selected_date.getDate().toString();\n    let daterequested =  year +'-'+ month +'-' + day\n    this.reserved_date_list = this.appointmentService.getDateList(daterequested);\n    if (this.reserved_date_list != null){\n      for (let reserved of this.reserved_date_list){\n        for (let date of this.date_list){\n          if (date == reserved) {\n\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * réservation de l'heure souhiatée\n   * @param date\n   */\n  bookHour(date) {\n\n    if (this.name == null|| this.surname == null || this.email == null || this.phone == null) {\n      console.log(\"veuillez remplir tout les champs\");\n    }\n    else {\n      let hour = date.hour;\n      let year = this.selected_date.getFullYear().toString();\n      let month = (this.selected_date.getMonth() + 1).toString();\n      let day = this.selected_date.getDate().toString();\n      this.reservation = {\n        name: this.name,\n        surname: this.surname,\n        phone: '+32' + this.phone,\n        email: this.email,\n        date: day + '/' + month + '/' + year + \" \" + hour + \":\" + '00',\n      }\n      this.requested_date_parsed = year +'-'+  month +'-'+ day +'T'+ hour +':' + '00:00.000';\n    }\n  }\n\n  /**\n   * send réservation to the DB\n   * @param date\n   */\n  sendReservation(){\n    if (this.name == null|| this.surname == null || this.email == null || this.phone == null) {\n      console.log(\"veuillez remplir tout les champs\");\n    }\n    else {\n      this.appointmentService.sendReservation(this.reservation, this.requested_date_parsed);\n    }\n  }\n}\n","<div id=\"main-container\">\n  <div id=\"title\"> Prendre un rendez-vous </div>\n  <div id=\"infoContainer\">\n\n    <div id=\"infoForm\">\n\n      <mat-form-field id=\"datePickerForm\" class=\"form-field\" appearance=\"fill\">\n        <mat-label>Date du rendez-vous</mat-label>\n        <input matInput [matDatepicker]=\"picker\" [matDatepickerFilter]=\"dateFilter\" (dateChange)=\"select_date('change', $event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field class=\"form-field\" appearance=\"fill\">\n        <mat-label>Nom</mat-label>\n        <input matInput placeholder=\"\" required [(ngModel)]=\"name\" [formControl]=\"NameFormControl\">\n        <mat-error *ngIf=\"NameFormControl.hasError('required')\">\n          Veuillez renseigner votre email\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"form-field\" appearance=\"fill\">\n        <mat-label>Prénom</mat-label>\n        <input matInput placeholder=\"\" required [(ngModel)]=\"surname\" [formControl]=\"SurnameFormControl\">\n        <mat-error *ngIf=\"SurnameFormControl.hasError('required')\">\n          Veuillez renseigner votre email\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field id=\"telForm\" class=\"form-field\" appearance=\"fill\">\n        <mat-label>Telephone</mat-label>\n        <span matPrefix>+32 &nbsp;</span>\n        <input type=\"tel\" matInput placeholder=\"412-34-56-78\" [(ngModel)]=\"phone\" required [formControl]=\"PhoneFormControl\">\n        <mat-error *ngIf=\"PhoneFormControl.hasError('required')\">\n          Veuillez renseigner votre email\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field id=\"emailForm\" class=\"form-field\" appearance=\"fill\">\n        <mat-label>Email</mat-label>\n        <input type=\"email\" matInput [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\"\n               placeholder=\"Ex. pat@example.com\" required [(ngModel)]=\"email\">\n        <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n          Email non valide\n        </mat-error>\n        <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n          Veuillez renseigner votre email\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div id=\"sizer\"></div>\n\n    <div id=\"pickReservation\">\n      <mat-list *ngIf=\"date_selected\">\n        <mat-list-item *ngFor=\"let date of date_list\">\n          <div class=\"mat-list-item-bloc\" (click)=\"bookHour(date)\">\n            <div class=\"date-list-item\">{{date.hour}} heure</div>\n            <div class=\"date-list-item\" class=\"date_empty\" *ngIf=\"date.empty\">Disponibilite <mat-icon>done_outline</mat-icon></div>\n            <div class=\"date-list-item\" class=\"date_full\" *ngIf=\"!date.empty\">Réservé <mat-icon>highlight_off</mat-icon></div>\n          </div>\n        </mat-list-item>\n      </mat-list>\n      <div id=\"placeHolder-reservation\" *ngIf=\"!date_selected\">\n        <p>Veuillez choisir la date de votre rendez-vous</p>\n        <p>Afin de pouvoir choisir l'heure par la suite</p>\n      </div>\n    </div>\n\n  </div>\n\n  <div id=\"confirmReservation\">\n    <div *ngIf=\"requested_date_parsed\" id=\"confirmReservation-bloc\">\n      <div id=\"confirmation-info\">\n        <div class=\"reservation-line\">Nom Prénom : {{this.reservation.name}} {{this.reservation.surname}}</div>\n        <div class=\"reservation-line\">Téléphone : {{this.reservation.phone}}</div>\n        <div class=\"reservation-line\">Email : {{this.reservation.email}}</div>\n        <div class=\"reservation-line\">Date et heure de réservation : {{this.reservation.date}}</div>\n      </div>\n      <div class=\"confirmation-button mat-elevation-z1\" (click)=\"sendReservation()\"> Confirmer </div>\n    </div>\n    <div *ngIf=\"!requested_date_parsed\">\n      <div id=\"confirmReservation-placeholder\">\n        <p>Veuillez remplir tout les champs </p>\n        <p>ainsi que choisir une date afin de pouvoir effectuer une réservation </p>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport { ContactService} from \"../services/contactService/contact.service\";\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  FormData: FormGroup;\n\n  constructor(private builder: FormBuilder, private contact: ContactService) {\n  }\n\n  ngOnInit() {\n    this.FormData = this.builder.group({\n      Fullname: new FormControl('', [Validators.required]),\n      Email: new FormControl('', [Validators.compose([Validators.required, Validators.email])]),\n      Comment: new FormControl('', [Validators.required])\n    });\n  }\n\n  onSubmit(FormData) {\n    console.log(FormData);\n    this.contact.PostMessage(FormData)\n      .subscribe(response => {\n        location.href = 'https://mailthis.to/confirm';\n        console.log(response)\n      }, error => {\n        console.warn(error.responseText);\n        console.log({error})\n      })\n\n  }\n\n}\n\n\n\n\n","<div class=\"container\">\n  <div id=\"title\"> Contactez-nous içi ! </div>\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3\">\n      <form [formGroup]=\"FormData\" (ngSubmit)=\"onSubmit(FormData.value)\"><div class=\"form-group\">\n        <label class=\"gris\">Email</label>\n        <input type=\"email\" class=\"form-control\" name=\"Email\" aria-describedby=\"emailHelp\" placeholder=\"JeanDecoster@gmail.com\" formControlName=\"Email\">\n      </div>\n        <div class=\"form-group\">\n          <label class=\"gris\">Nom & prénom</label>\n          <input type=\"text\" class=\"form-control\" name=\"Fullname\" placeholder=\"Decoster Jean\" formControlName=\"Fullname\">\n        </div>\n        <div class=\"form-group\">\n          <label class=\"gris\">Commentaire</label>\n          <textarea class=\"form-control\" formControlName=\"Comment\" name=\"Comment\">\n</textarea>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!FormData.valid\">Submit</button>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"main-container\">\n  <div id=\"confid-button\" [routerLink]=\"['/rgpd']\">Confidentialité des données</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"main-container\" class=\"mat-elevation-z1\">\n  <img src=\"assets/logo2%20reseaux.png\">\n  <div id=\"title\">Bedroom Enterprise</div>\n  <div id=\"button-bloc\">\n  <div class=\"button mat-elevation-z1\" [routerLink]=\"['/accueil']\">  Accueil </div>\n  <div class=\"button mat-elevation-z1\" [routerLink]=\"['/appointment']\">  Prendre rendez-vous </div>\n    <div class=\"button mat-elevation-z1\" [routerLink]=\"['/contact']\">  Contactez-nous </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rgpd',\n  templateUrl: './rgpd.component.html',\n  styleUrls: ['./rgpd.component.scss']\n})\nexport class RgpdComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n\n  <h1 class=\"blue\">\n    Politique de confidentialité de Bedroom Enterprise\n  </h1>\n\n  <h2 class=\"purple\">\n    Les données collectées par Bedroom Enterprise\n  </h2>\n\n  <p class=\"text-white\">\n    Bedroom Enterprise\n    collecte les informations que vous renseignez afin de les transmettre\n    aux médecins pour qu’ils puissent avoir vos données pour vos rendez-vous.\n    Notamment votre nom, prénom, email, téléphone, la date et l'heure du rendez-vous.\n  </p>\n\n  <h2 class=\"purple\">\n    Ce que nous vous promettons :\n  </h2>\n\n  <p class=\"text-white\">\n    Bedroom Enterprise ne divulguera jamais vos données à de tierces personnes.\n    Vous êtes entre de bonnes mains. Nous pouvons également pas garder les informations personnelles des visiteurs du site dans un délai\n    supérieur à 36 mois. En effet, aprés le délai, nous devrons effacer les données encodées pour les rendez-vous. <br>\n    Vous pouvez égalament\n    nous contacter pour rectifier, supprimer ou restituer une informations, nous nous assurons d'effectuer la tâche dans un délai de 1 mois\n  </p>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n  putReservationURL : 'localhost/register';\n  getDateURL: 'localhost/:';\n\n  current_date_selected = null;\n  reserved_date_list = null;\n\n  constructor(private http: HttpClient) { }\n\n  sendReservation(reservation, date_parsed){\n    console.log(reservation.name, reservation.surname, reservation.phone, reservation.email, date_parsed);\n    return this.http.post('/api/v1/register' ,{\n      \"nom\": reservation.name,\n      \"prenom\":reservation.prenom,\n      \"telephone\": reservation.phone,\n      \"email\": reservation.email,\n      \"dateRDV\" : date_parsed\n    });\n  }\n\n  getDateList(daterequested : string){\n    this.current_date_selected = daterequested;\n    if (this.current_date_selected == null) {\n      return null\n    }\n    else {\n      this.reserved_date_list = this.http.get('api/v1/rdv/' + this.current_date_selected);\n      return this.reserved_date_list;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from \"@angular/common/http\";\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  private mailApi = 'https://mailthis.to/needhelp';\n\n  constructor( private http: HttpClient) { }\n\n  PostMessage(input: any) {\n    return this.http.post(this.mailApi, input, { responseType: 'text' })\n      .pipe(\n        map(\n          (response) => {\n            if (response) {\n              return response;\n            }\n          },\n          (error: any) => {\n            return error;\n          }\n        )\n      );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}